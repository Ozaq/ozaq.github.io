name: PR Docs Preview

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: write          # push to gh-pages
  pull-requests: write     # edit PR body

env:
  PREVIEW_DIR: pull-requests/${{ github.event.pull_request.number }}

# ────────────────────────────────────────────────────────────────
jobs:
  build-and-deploy:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
      # 1 — Check out (default branch) so we can build the docs
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0          # we’ll need all history if your real build does

      # 2 — “Build” the site (demo: an HTML file with the PR number)
      - name: Build demo HTML
        run: |
          mkdir -p site
          echo "<html><body><h1>Preview for PR #${{ github.event.pull_request.number }}</h1></body></html>" > site/index.html

      # 3 — Copy into the preview folder inside the repo working tree
      - name: Stage preview into working tree
        run: |
          rm -rf "$PREVIEW_DIR"
          mkdir -p "$(dirname "$PREVIEW_DIR")"
          cp -r site/. "$PREVIEW_DIR/"

      # 4 — Commit & push just that folder to *gh-pages*
      - name: Commit preview to gh-pages
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: gh-pages
          commit_message: "docs: preview for PR #${{ github.event.pull_request.number }}"
          file_pattern: ${{ env.PREVIEW_DIR }}/*

      # 5 — Update (or insert) the preview link in the PR description
      - name: Update PR body with preview link
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr   = context.payload.pull_request;
            const repo = context.repo;
            const url  = `https://${repo.owner}.github.io/${repo.repo}/${process.env.PREVIEW_DIR}/`;

            const start = '<!-- PREVIEW-URL-START -->';
            const end   = '<!-- PREVIEW-URL-END -->';
            const snippet = `${start}\n🔗 **Preview:** ${url}\n${end}`;

            const original = pr.body || '';
            const updated  = original.includes(start)
              ? original.replace(new RegExp(`${start}[\\s\\S]*?${end}`), snippet)
              : `${original}\n\n${snippet}`;

            await github.rest.pulls.update({
              owner: repo.owner,
              repo:  repo.repo,
              pull_number: pr.number,
              body: updated
            });

# ────────────────────────────────────────────────────────────────
  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
      # 1 — Check out the *gh-pages* branch directly
      - uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0

      # 2 — Remove the preview folder from the working tree
      - name: Delete preview folder
        run: |
          git rm -r --ignore-unmatch "$PREVIEW_DIR" || echo "Folder already gone"

      # 3 — Commit & push the deletion
      - name: Commit cleanup to gh-pages
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: gh-pages
          commit_message: "chore: remove preview for PR #${{ github.event.pull_request.number }}"

